# create secret FIRST with:
# kubectl create secret generic my-k8s-admin-secret -n install-tanzu-cluster-essentials --from-literal=username=supersecret --from-literal=password=topsecret
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: install-essentials
  namespace: install-tanzu-cluster-essentials
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: install-essentials-role
rules:
  # TODO validate the below required
  - apiGroups: [""]
    resources:
      - configmaps
    verbs:
      - "*"
      # - update
      # update is for configmaps in tanzu-cluster-essentials namespace
      # - delete
      # delete is for configmaps global for kapp-controller
      # BUT other perms needed (* requested)
  - apiGroups: [""]
    resources:
      - pods
      - replicasets
      - services
      - customresourcedefinitions
      - namespaces
      - secrets
      - apiservices
      - serviceaccounts
    verbs:
      - get
      - watch
      - list
      - create
      - update
      # update used for namespaces
  - apiGroups: ["apps"]
    resources:
      - deployments
    verbs:
      - get
      - list
      - create
      - update
  - apiGroups: ["admissionregistration.k8s.io"]
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs:
      - get
      - list
      - watch
  - apiGroups: ["data.packaging.carvel.dev"]
    resources:
      - packagemetadatas
      - packagemetadatas/status
      - packages
      - packages/status
    verbs:
      - "*"
  - apiGroups: ["packaging.carvel.dev"]
    resources:
      - packageinstalls
      - packageinstalls/status
      - packagerepositories
      - packagerepositories/status
    verbs:
      - "*"
  - apiGroups: ["internal.packaging.carvel.dev"]
    resources:
      - internalpackagemetadatas
      - internalpackages
    verbs:
      - "*"
  - apiGroups: ["kappctrl.k14s.io"]
    resources:
      - apps
      - apps/status
    verbs:
      - "*"
  - apiGroups: ["apiregistration.k8s.io"]
    resources:
      - apiservices
    verbs:
      - get
      - list
      - create
      - update
  - apiGroups: ["apiextensions.k8s.io"]
    resources:
      - customresourcedefinitions
    # TODO restrict these to just ours
    verbs:
      - get
      - list
      - create
      - update
  - apiGroups: ["authorization.k8s.io"]
    resources:
      - subjectaccessreviews
    verbs:
      - get
      - list
      - create
  - apiGroups: ["authentication.k8s.io"]
    resources:
      - tokenreviews
    verbs:
      - get
      - list
      - create
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources:
      - clusterroles
      - clusterrolebindings
      - rolebindings
      - roles
    verbs:
      - get
      - list
      - watch
      - create
      - update
      # Used for Updating resource rolebinding/pkgserver-auth-reader (rbac.authorization.k8s.io/v1) namespace: kube-system: rolebindings.rbac.authorization.k8s.io "pkgserver-auth-reader" is forbidden:
      # User "system:serviceaccount:install-tanzu-cluster-essentials:install-essentials" cannot update resource "rolebindings" in API group "rbac.authorization.k8s.io" in the namespace "kube-system"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: modify-pods-to-sa
subjects:
  - kind: ServiceAccount
    name: install-essentials
    namespace: install-tanzu-cluster-essentials
roleRef:
  kind: ClusterRole
  name: install-essentials-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: install-tanzu-cluster-essentials
  namespace: install-tanzu-cluster-essentials
spec:
  template:
    spec:
      serviceAccountName: install-essentials
      containers:
      - name: install-tanzu-cluster-essentials
        # EDIT THE BELOW FOR YOUR ENV FOR WHERE THIS CONTAINER RESIDES
        # Note: You should use the SHA instead of a tag. Below is for convenience.
        image: your.harbor.registry/projectname/image:v1
        imagePullPolicy: Always
        env:
        - name: INSTALL_REGISTRY_HOSTNAME
          # EDIT THE BELOW FOR YOUR ENV FOR THE TARGET HARBOR REPO
          value: "harbor.shared.12factor.xyz"
        - name: INSTALL_REGISTRY_USERNAME
          valueFrom:
            secretKeyRef:
              name: my-k8s-admin-secret
              key: username
        - name: INSTALL_REGISTRY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: my-k8s-admin-secret
              key: password
      restartPolicy: Never
  backoffLimit: 0